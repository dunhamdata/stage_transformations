/*===========================================================================================================================================
 Procedure:   ppc contact transformation
 Create date: 2022-04-22
 Description:  Converts raw data export names to standardized contact schema
 Affected table(s):
 Parameter(s): [Dunham].[ppc].[contact]
 Return Value(s): [Dunham].[ppc].[contact_stage]
 Programming Notes:

      **Only rows with a ID will be brought in for analysis

                Contact Type:
                1. Recurring Donor: tagged as monthly donor
                2. Church Donor: tagged as PBC Donor
                3. Volunteer: tagged as volunteer
                4. Regular Donor: none of the above

                Demographic Columns:
                1. NULL
                2. NULL
                3. NULL
                4. NULL
                5. NULL

 Exclusions:
                Appeal exclusions:
                1. address is blank
                2. foreign address
                3. deceased
              CUSTOM EXCLUSIONS:
                4. communication preference is 'Do not mail'
                5. communication preference is 'Newsletter Only'

                Newsletter exclusions:
                1. address is blank
                2. foreign address
                3. deceased
              CUSTOM EXCLUSIONS:
                4. communication preference is 'Do not mail'

                Email exclusions:
                1. primary and secondary email are blank
                2. deceased
              CUSTOM EXCLUSIONS:
                3. communication preference is 'Newsletter Only'
                4. communication preference is 'do not email'

                Text exclusions:
                1. primary and secondary phone are blank
                2. deceased
              CUSTOM EXCLUSIONS:
                3. communication preference is 'newsletter only'


 =============================================================================================================================================
 SUMMARY OF CHANGES
 Date (yyyy-mm-dd)		Author				Comments
 ---------------------------------------------------------------------------------------------------------------------------------------------

 ==============================================================================================================================================*/

IF OBJECT_ID('Dunham.ppc.contact_stage') IS NULL

CREATE TABLE [ppc].[contact_stage](
    [pk_constituent_id] [varchar](200) NOT NULL PRIMARY KEY,
    [company_name] [varchar](max) NULL,
    [contact_type] [varchar](max) NULL,
    [salutation] [varchar](max) NULL,
    [addressee] [varchar](max) NULL,
    [title] [varchar](max) NULL,
    [last_name] [varchar](max) NULL,
    [first_name] [varchar](max) NULL,
    [suffix] [varchar](max) NULL,
    [account_created_date] [datetime2] NOT NULL,
    [address_line_1] [varchar](max) NULL,
    [address_line_2] [varchar](max) NULL,
    [address_line_3] [varchar](max) NULL,
    [city] [varchar](max) NULL,
    [state] [varchar](max) NULL,
    [postal] [varchar](max) NULL,
    [country] [varchar](max) NULL,
    [primary_email] [varchar](max) NULL,
    [secondary_email] [varchar](max) NULL,
    [primary_phone] [varchar](max) NULL,
    [secondary_phone] [varchar](max) NULL,
    [tags] [varchar](max) NULL,
    [portfolio] [varchar](max) NULL,
    [gift_stage] [varchar](max) NULL,
    [gift_range] [varchar](max) NULL,
    [gift_rating] [varchar](max) NULL,
    [wealth_score] [varchar](max) NULL,
    [gift_score] [varchar](max) NULL,
    [deceased] [bit] NULL,
    [appeal_eligible] [bit] NULL,
    [newsletter_eligible] [bit] NULL,
    [email_eligible] [bit] NULL,
    [text_eligible] [bit] NULL,
    [crm] [varchar](50) NULL,
    [demographic_1] [varchar](max) NULL,
    [demographic_2] [varchar](max) NULL,
    [demographic_3] [varchar](max) NULL,
    [demographic_4] [varchar](max) NULL,
    [demographic_5] [varchar](max) NULL,
    [attribute_1] [varchar](max) NULL,
    [attribute_2] [varchar](max) NULL,
    [attribute_3] [varchar](max) NULL,
    [attribute_4] [varchar](max) NULL,
    [attribute_5] [varchar](max) NULL,
    [fk_client_constituent_id] [varchar](210) NOT NULL,
    [client_acronym] [varchar](10) NOT NULL,
    [last_modified_date] datetime2 NULL
  ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];

/*custom field mappings per client*/

MERGE [Dunham].[ppc].[contact_stage] WITH (HOLDLOCK) AS target
USING(
    SELECT DISTINCT

      CAST([id] as varchar(200)) as [pk_constituent_id],

			CASE
        WHEN LEN([name])<=0
          OR [name] IS NULL
        THEN NULL
        ELSE CAST([name] as varchar(max))
      END as [company_name],

      /*contact_type is customized by client*/
      CASE
        WHEN CHARINDEX('Monthly',[tags])>0 THEN 'Recurring Donor'
        WHEN CHARINDEX('PBC',[tags])>0 THEN 'Church Attendee'
      	WHEN CHARINDEX('Volunteer',[tags])>0 THEN 'Volunteer'
      	ELSE 'Regular Donor'
      END AS [contact_type],

      /*this field is used to personalize communications*/
			CASE
        WHEN LEN([informal_name])<=0
          OR [informal_name] IS NULL
        THEN NULL
        ELSE CAST([informal_name] as varchar(max))
      END as [salutation],

      /*this field is used to personalize envelopes*/
			CASE
        WHEN LEN([name])<=0
          OR [name] IS NULL
        THEN NULL
        ELSE CAST([name] as varchar(max))
      END as [addressee],

			CASE
        WHEN LEN([contact_individuals_prefix])<=0
          OR [contact_individuals_prefix] IS NULL
        THEN NULL
        ELSE CAST([contact_individuals_prefix] as varchar(max))
      END as [title],

			CASE
        WHEN LEN([contact_individuals_last_name])<=0
          OR [contact_individuals_last_name] IS NULL
        THEN NULL
        ELSE CAST([contact_individuals_last_name] as varchar(max))
      END as [last_name],

			CASE
        WHEN LEN([contact_individuals_first_name])<=0
          OR [contact_individuals_first_name] IS NULL
        THEN NULL
        ELSE CAST([contact_individuals_first_name] as varchar(max))
      END as [first_name],

			CASE
        WHEN LEN([contact_individuals_suffix])<=0
          OR [contact_individuals_suffix] IS NULL
        THEN NULL
        ELSE CAST([contact_individuals_suffix] as varchar(max))
      END as [suffix],

			CASE
				WHEN LEN([contact_individuals_create_date_time_utc])<=0
          OR [contact_individuals_create_date_time_utc] IS NULL
        THEN CAST('1901-01-01 13:14:15.0000000' as datetime2)
				ELSE CAST([contact_individuals_create_date_time_utc] as datetime2)
			END as [account_created_date],

			CASE
        WHEN LEN([contact_addresses_address_1])<=0
          OR [contact_addresses_address_1] IS NULL
        THEN NULL
        ELSE CAST([contact_addresses_address_1] as varchar(max))
      END as [address_line_1],

			CASE
        WHEN LEN([contact_addresses_address_2])<=0
          OR [contact_addresses_address_2] IS NULL
        THEN NULL
        ELSE CAST([contact_addresses_address_2] as varchar(max))
      END as [address_line_2],

      /*CASE
        WHEN LEN([insert_address_line_3])<=0
          OR [insert_address_line_3] IS NULL
        THEN NULL
        ELSE CAST([insert_address_line_3] as varchar(max))
      END*/
      NULL as [address_line_3],

			CASE
        WHEN LEN([contact_addresses_city])<=0
          OR [contact_addresses_city] IS NULL
        THEN NULL
        ELSE CAST([contact_addresses_city] as varchar(max))
      END as [city],

			CASE
        WHEN LEN([contact_addresses_state])<=0
          OR [contact_addresses_state] IS NULL
        THEN NULL
        ELSE CAST([contact_addresses_state] as varchar(max))
      END as [state],

			CASE
        WHEN LEN([contact_addresses_postal])<=0
          OR [contact_addresses_postal] IS NULL
        THEN NULL
        ELSE CAST(LEFT([contact_addresses_postal],5) as varchar(max))
      END as [postal],

			CASE
        WHEN LEN([contact_addresses_country])<=0
          OR [contact_addresses_country] IS NULL
        THEN NULL
        ELSE CAST([contact_addresses_country] as varchar(max))
      END as [country],

      /*inserts secondary_email if primary_email is blank
        casting all emails in lower-case characters for modeling*/

			CASE
        WHEN (LEN([primary_email])<=0
            OR [primary_email] IS NULL)
          AND LEN([secondary_email])>0
        THEN CAST(LOWER([secondary_email]) as varchar(max))
				WHEN LEN([primary_email])<=0
          OR [primary_email] IS NULL
        THEN NULL
			  ELSE CAST(LOWER([primary_email]) as varchar(max))
      END as [primary_email],

      /*casting all emails in lower-case characters for modeling*/
			CASE
        WHEN LEN([secondary_email])<=0
          OR [secondary_email] IS NULL
        THEN NULL

        /*removes secondary email duplication if secondary email inserted into primary email*/
        WHEN (LEN([primary_email])<=0
            OR [primary_email] IS NULL)
          AND LEN([secondary_email])>0
        THEN NULL
        ELSE CAST(LOWER([secondary_email]) as varchar(max))
      END as [secondary_email],

      /*inserts secondary_phone as primary_phone if primary_phone is blank*/
			CASE
				WHEN (LEN([primary_phone])<=0
            OR [primary_phone] IS NULL)
          AND LEN([secondary_phone])>0
        THEN CAST([secondary_phone] as varchar(max))
				WHEN LEN([primary_phone])<=0
          OR [primary_phone] IS NULL
        THEN NULL
				ELSE CAST([primary_phone] as varchar(max))
			END as [primary_phone],

      CASE
        WHEN LEN([secondary_phone])<=0
          OR [secondary_phone] IS NULL
        THEN NULL
        /*removes secondary phone duplication when secondary phone inserted into primary phone*/
        WHEN (LEN([primary_phone])<=0
            OR [primary_phone] IS NULL)
          AND LEN([secondary_phone])>0
        THEN NULL
        ELSE CAST([secondary_phone] as varchar(max))
      END as [secondary_phone],

			CASE
        WHEN LEN([tags])<=0
          OR [tags] IS NULL
        THEN NULL
        ELSE CAST([tags] as varchar(max))
      END as [tags],

  /*start donor advancement specific data fields for filters*/
			CASE
        WHEN LEN([custom_fields_current_porfolio])<=0
          OR [custom_fields_current_porfolio] IS NULL
        THEN NULL
        ELSE CAST([custom_fields_current_porfolio] as varchar(max))
      END as [portfolio],

      /*identification, cultivation, solicitation, or stewardship designation*/
			/*CASE
        WHEN LEN([insert_gift_stage])<=0
          OR [insert_gift_stage] IS NULL
        THEN NULL
        ELSE CAST([insert_gift_stage] as varchar(max))
      END*/
      NULL as [gift_stage],

      /*gift capacity range - should display $ amount range*/
			CASE
        WHEN LEN([custom_fields_gift_capacity_range])<=0
          OR [custom_fields_gift_capacity_range] IS NULL
        THEN NULL
        ELSE CAST([custom_fields_gift_capacity_range] as varchar(max))
      END as [gift_range],

      /*gift capacity score - should display # correlated to [gift_range]*/
			CASE
        WHEN LEN([custom_fields_gift_capacity_rating])<=0
          OR [custom_fields_gift_capacity_rating] IS NULL
        THEN NULL
        ELSE CAST([custom_fields_gift_capacity_rating] as varchar(max))
      END as [gift_rating],

      /*wealth score - score generated by WE*/
      /*CASE
        WHEN LEN([insert_wealth_score])<=0
          OR [insert_wealth_score] IS NULL
        THEN NULL
        ELSE CAST([insert_wealth_score] as varchar(max))
      END*/
			NULL as [wealth_score],

      /*WE p2g score = gift_score; formats p2g if '|' not found*/
			CASE
        WHEN LEN([custom_fields_p_2_g_score_combo_])<=0
          OR [custom_fields_p_2_g_score_combo_] IS NULL
        THEN NULL
        WHEN CHARINDEX('|', [custom_fields_p_2_g_score_combo_]) = 0
        THEN CAST(CONCAT(LEFT([custom_fields_p_2_g_score_combo_],1),'|',RIGHT([custom_fields_p_2_g_score_combo_],1)) as varchar(max))
        ELSE CAST([custom_fields_p_2_g_score_combo_] as varchar(max))
      END as [gift_score],
    /*end donor advancement specific columns*/

      /*custom by client, may contain true/false or date; output as bit/boolean
        default script assumes date entry*/
			CASE
        WHEN [contact_individuals_is_deceased] = 1
        THEN 1
        ELSE 0
      END as [deceased],

    /*start custom communication eligibility fields - default US exclusions in script*/

		/*default client appeal mailing exclusions*/
			CASE

      /*excludes blank addresses*/
				WHEN LEN([contact_addresses_address_1])<=0
          OR [contact_addresses_address_1] IS NULL
        THEN 0

        /*excludes foreign addresses - US*/
				WHEN LEN([contact_addresses_country])>0
          AND (UPPER([contact_addresses_country])<>'US'
            AND UPPER([contact_addresses_country])<>'USA'
            AND UPPER([contact_addresses_country])<>'UNITED STATES'
            AND UPPER([contact_addresses_country])<>'UNITED STATES OF AMERICA')
        THEN 0

        /*excludes deceased - default as date entry*/
        WHEN [contact_individuals_is_deceased] IS NOT NULL
          OR LEN([contact_individuals_is_deceased])>0
        THEN 0

        /*custom appeal eligibility*/
        WHEN CHARINDEX('No Mail',[custom_fields_comms_preference])>0
        THEN 0

        WHEN CHARINDEX('Newsletter Only',[custom_fields_comms_preference])>0
        THEN 0
				ELSE 1
			END as [appeal_eligible],

		/*default client newsletter mailing exclusions*/
      CASE

      /*excludes blank addresses*/
				WHEN LEN([contact_addresses_address_1])<=0
          OR [contact_addresses_address_1] IS NULL
        THEN 0

        /*excludes foreign addresses - US*/
        WHEN LEN([contact_addresses_country])>0
          AND (UPPER([contact_addresses_country])<>'US'
            AND UPPER([contact_addresses_country])<>'USA'
            AND UPPER([contact_addresses_country])<>'UNITED STATES'
            AND UPPER([contact_addresses_country])<>'UNITED STATES OF AMERICA')
        THEN 0

        /*excludes deceased - default as date entry*/
        WHEN [contact_individuals_is_deceased] IS NOT NULL
          OR LEN([contact_individuals_is_deceased])>0
        THEN 0

        /*custom newsletter eligibility*/
        WHEN CHARINDEX('No Mail',[custom_fields_comms_preference])>0
        THEN 0

        WHEN CHARINDEX('Newsletter Only',[custom_fields_comms_preference])>0
        THEN 1
				ELSE 1
			END as [newsletter_eligible],

		/*default client email communication exclusions*/
			CASE

        /*excludes blank primary and secondary emails*/
				WHEN (LEN([primary_email])<=0
            OR [primary_email] IS NULL)
				 	AND (LEN([secondary_email])<=0
            OR [secondary_email] IS NULL)
        THEN 0

        /*excludes deceased - default as date entry*/
        WHEN [contact_individuals_is_deceased] IS NOT NULL
          OR LEN([contact_individuals_is_deceased])>0
        THEN 0

        /*custom email eligibility*/
        WHEN CHARINDEX('Do Not Email',[custom_fields_comms_preference])>0
        THEN 0

        WHEN CHARINDEX('Newsletter Only',[custom_fields_comms_preference])>0
        THEN 0

				ELSE 1
			END as [email_eligible],

		/*default client text communication exclusions*/
			CASE

        /*excludes blank primary and secondary phones*/
				WHEN (LEN([primary_phone])<=0
            OR [primary_phone] IS NULL)
				 	AND (LEN([secondary_phone])<=0
            OR [secondary_phone] IS NULL)
        THEN 0

        /*excludes deceased - default as date entry*/
        WHEN [contact_individuals_is_deceased] IS NOT NULL
          OR LEN([contact_individuals_is_deceased])>0
        THEN 0

        /*custom text eligibility*/
        WHEN CHARINDEX('Newsletter Only',[custom_fields_comms_preference])>0
        THEN 0
			  ELSE 1
      END as [text_eligible],

      /*only used when multiple CRM's are used to create data files*/
      /*CASE
        WHEN [insert_crm] IS NULL
          OR LEN([insert_crm)<=0
        THEN NULL
        ELSE CAST([insert_crm] as varchar(50))
      END*/
      NULL as [crm],

  /*custom demographic data columns to populate audience report*/
    /*inserting gender*/
      CASE
        WHEN [contact_individuals_gender] IS NULL
          OR LEN([contact_individuals_gender])<=0
        THEN NULL
        ELSE CAST([contact_individuals_gender] as varchar(50))
      END as [demographic_1],

    /*inserting age by taking current year minus birth year in CRM*/
      CASE
        WHEN [contact_individuals_birth_year] IS NULL
          OR LEN([contact_individuals_birth_year])<=0
        THEN NULL
        ELSE CAST(YEAR(GETDATE())-[contact_individuals_birth_year] as varchar(50))
      END as [demographic_2],

      /*CASE
        WHEN [insert_demographic_3] IS NULL
          OR LEN([insert_demographic_3)<=0
        THEN NULL
        ELSE CAST([insert_demographic_3] as varchar(50))
      END*/
      NULL as [demographic_3],

      /*CASE
        WHEN [insert_demographic_4] IS NULL
          OR LEN([insert_demographic_4)<=0
        THEN NULL
        ELSE CAST([insert_demographic_4] as varchar(50))
      END*/
      NULL as [demographic_4],

      /*CASE
        WHEN [insert_demographic_5] IS NULL
          OR LEN([insert_demographic_5)<=0
        THEN NULL
        ELSE CAST([insert_demographic_5] as varchar(50))
      END*/
      NULL as [demographic_5],

      /*'wildcard' contact fields that are custom per client*/
			NULL as [attribute_1],
			NULL as [attribute_2],
			NULL as [attribute_3],
			NULL as [attribute_4],
			NULL as [attribute_5],

      /*creates unique constituent_id for aggregated view PK and contact_stage FK*/
			CAST(CONCAT(UPPER('ppc'),'_',[id]) as varchar(210))  AS [fk_client_constituent_id],

			UPPER('ppc') as [client_acronym]

	 FROM [Dunham].[ppc].[contact]
   WHERE [id] IS NOT NULL and [is_archived]<>1) AS source
   ON (target.[pk_constituent_id] = source.[pk_constituent_id])

   /*inserts .contact rows that are not found in .contact_stage rows*/
   WHEN NOT MATCHED BY target
     THEN INSERT ([pk_constituent_id],
         [company_name],
         [contact_type],
         [salutation],
         [addressee],
         [title],
         [last_name],
         [first_name],
         [suffix],
         [account_created_date],
         [address_line_1],
         [address_line_2],
         [address_line_3],
         [city],
         [state],
         [postal],
         [country],
         [primary_email],
         [secondary_email],
         [primary_phone],
         [secondary_phone],
         [tags],
         [portfolio],
         [gift_stage],
         [gift_range],
         [gift_rating],
         [wealth_score],
         [gift_score],
         [deceased],
         [appeal_eligible],
         [newsletter_eligible],
         [email_eligible],
         [text_eligible],
         [crm],
         [demographic_1],
         [demographic_2],
         [demographic_3],
         [demographic_4],
         [demographic_5],
         [attribute_1],
         [attribute_2],
         [attribute_3],
         [attribute_4],
         [attribute_5],
         [fk_client_constituent_id],
         [client_acronym],
         [last_modified_date])

          VALUES (source.[pk_constituent_id],
         source.[company_name],
         source.[contact_type],
         source.[salutation],
         source.[addressee],
         source.[title],
         source.[last_name],
         source.[first_name],
         source.[suffix],
         source.[account_created_date],
         source.[address_line_1],
         source.[address_line_2],
         source.[address_line_3],
         source.[city],
         source.[state],
         source.[postal],
         source.[country],
         source.[primary_email],
         source.[secondary_email],
         source.[primary_phone],
         source.[secondary_phone],
         source.[tags],
         source.[portfolio],
         source.[gift_stage],
         source.[gift_range],
         source.[gift_rating],
         source.[wealth_score],
         source.[gift_score],
         source.[deceased],
         source.[appeal_eligible],
         source.[newsletter_eligible],
         source.[email_eligible],
         source.[text_eligible],
         source.[crm],
         source.[demographic_1],
         source.[demographic_2],
         source.[demographic_3],
         source.[demographic_4],
         source.[demographic_5],
         source.[attribute_1],
         source.[attribute_2],
         source.[attribute_3],
         source.[attribute_4],
         source.[attribute_5],
         source.[fk_client_constituent_id],
         source.[client_acronym],
         NULL)


   /*removes rows from .contact_stage that do not match .contact*/
   WHEN NOT MATCHED BY source
   THEN DELETE


   /*updates .contact_stage rows with matching .gift.pk_constituent_id with .contact data*/
   WHEN MATCHED THEN UPDATE SET

         target.[company_name]=source.[company_name],
         target.[contact_type]=source.[contact_type],
         target.[salutation]=source.[salutation],
         target.[addressee]=source.[addressee],
         target.[title]=source.[title],
         target.[last_name]=source.[last_name],
         target.[first_name]=source.[first_name],
         target.[suffix]=source.[suffix],
         target.[account_created_date]=source.[account_created_date],
         target.[address_line_1]=source.[address_line_1],
         target.[address_line_2]=source.[address_line_2],
         target.[address_line_3]=source.[address_line_3],
         target.[city]=source.[city],
         target.[state]=source.[state],
         target.[postal]=source.[postal],
         target.[country]=source.[country],
         target.[primary_email]=source.[primary_email],
         target.[secondary_email]=source.[secondary_email],
         target.[primary_phone]=source.[primary_phone],
         target.[secondary_phone]=source.[secondary_phone],
         target.[tags]=source.[tags],
         target.[portfolio]=source.[portfolio],
         target.[gift_stage]=source.[gift_stage],
         target.[gift_range]=source.[gift_range],
         target.[gift_rating]=source.[gift_rating],
         target.[wealth_score]=source.[wealth_score],
         target.[gift_score]=source.[gift_score],
         target.[deceased]=source.[deceased],
         target.[appeal_eligible]=source.[appeal_eligible],
         target.[newsletter_eligible]=source.[newsletter_eligible],
         target.[email_eligible]=source.[email_eligible],
         target.[text_eligible]=source.[text_eligible],
         target.[crm]=source.[crm],
         target.[demographic_1]=source.[demographic_1],
         target.[demographic_2]=source.[demographic_2],
         target.[demographic_3]=source.[demographic_3],
         target.[demographic_4]=source.[demographic_4],
         target.[demographic_5]=source.[demographic_5],
         target.[attribute_1]=source.[attribute_1],
         target.[attribute_2]=source.[attribute_2],
         target.[attribute_3]=source.[attribute_3],
         target.[attribute_4]=source.[attribute_4],
         target.[attribute_5]=source.[attribute_5],
         target.[last_modified_date] = GETDATE();
